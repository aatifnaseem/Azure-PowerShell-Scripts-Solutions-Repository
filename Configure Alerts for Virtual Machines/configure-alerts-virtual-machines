<#
    .DESCRIPTION
        This script creates & configures the following alerts for input virtual machine list provided:
        a. Restart alert
        b. Deallocation alert
        c. Power Off alert
        d. CPU Utilization alert
        e. Disk Space alert
    .NOTES
        AUTHOR: 
        LAST EDIT: Dec 13, 2021
#>

#Set-ExecutionPolicy -ExecutionPolicy Unrestricted
## Use this for Automation account only
<#-- Initialize Connection & Import Modules --#>
Import-Module -Name Az.Resources
Import-Module -Name Az.Accounts
$connectionName = "AzureRunAsConnectionName"
$WarningPreference = 'SilentlyContinue'
Write-Output "Started Script at : " (Get-Date).tostring()
try
{
    # Get the connection "AzureRunAsConnection "
    $servicePrincipalConnection = Get-AutomationConnection -Name $connectionName      
    Write-Output $servicePrincipalConnection
    "Logging in to Azure..."
    Add-AzAccount `
        -ServicePrincipal `
        -TenantId $servicePrincipalConnection.TenantId `
        -ApplicationId $servicePrincipalConnection.ApplicationId `
        -CertificateThumbprint $servicePrincipalConnection.CertificateThumbprint 
}
catch 
{
    if (!$servicePrincipalConnection)
    {
        $ErrorMessage = "Connection $connectionName not found."
        throw $ErrorMessage
    } 
    else
    {
        Write-Error -Message $_.Exception
        throw $_.Exception
    }
}
<#-- End Region for Initialize Connection & Import Modules --#>

##Use this for local execution
#Add-AzAccount
Write-Output "Started Creation of Action Group at : " (Get-Date).tostring()

Select-AzSubscription -SubscriptionId "Subscription ID for Azure Monitor"

$receiver = New-AzActionGroupReceiver `
    -Name "AGR-INFRA-DEV-UKS-LTM-01" `
    -EmailAddress "Target Email Address or DL"

# Creates a new or updates an existing action group.
$percentageCPUActionGroup = Set-AzActionGroup `
    -Name "notify-admins-vm-alert" `
    -ShortName "AG-INFRA-DEV-UKS-LTM-01" `
    -ResourceGroupName "Resource Group Name for Azure Monitor" `
    -Receiver $receiver

#Create Action Group in memory
$percentageCPUActionGroupID = New-AzActionGroup -ActionGroupId $percentageCPUActionGroup.Id

# Creates a local criteria object that can be used to create a new metric alert
$percentageCPUCondition = New-AzMetricAlertRuleV2Criteria `
    -MetricName "Percentage CPU >90" `
    -TimeAggregation Average `
    -Operator GreaterThan `
    -Threshold 0.9

Write-Output "Started Creation of required alert rules at : " (Get-Date).tostring()

$allSubscriptions = Get-AzSubscription

if(($allSubscriptions -ne $null) -and ($allSubscriptions.Count -gt 0))
{
    for($iSub=0;$iSub -lt $allSubscriptions.Count;$iSub++)
    {
        Select-AzSubscription -SubscriptionId $All_Subscriptions[$iSub].Id
        $subscriptionName = $All_Subscriptions[$iSub].Name
        
        $vms=Get-AzVM
        if(($vm -ne $null) -and ($vm.Count -gt 0))
        {
            Write-Output "Started Alert Configuration for " + $vm.Name " + at : " (Get-Date).tostring()
            foreach($vm in $vms)
            {
                $targetResourceId = (Get-AzResource -Name $vm.Name).ResourceId
                
                # Adds or updates a V2 metric-based alert rule for CPU Utilization
                $windowSize = New-TimeSpan -Minutes 60
                $frequency = New-TimeSpan -Minutes 60
                
                Add-AzMetricAlertRuleV2 `
                -Name "CPU Utilization more than 90%" `
                -ResourceGroupName "Azure Monitor Resource Group" `
                -WindowSize $windowSize `
                -Frequency $frequency `
                -TargetResourceId $targetResourceId `
                -Condition $percentageCPUCondition `
                -ActionGroup $percentageCPUActionGroupID `
                -Severity 3
            }
        }
    }
}
